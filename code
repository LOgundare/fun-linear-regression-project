# get_y() function
def get_y(m, b, x):
  return m*x + b
print(get_y(1, 0, 7)== 7)
print(get_y(5, 10, 3) == 25)

def calculate_error(m, b, point):
  x, y = point
  y_value =get_y(m, b, x)
  error = y - y_value
  return abs(error)

print(calculate_error(1, 0, (3, 3)))
print(calculate_error(1, 0, (3, 4)))
print(calculate_error(1, -1, (3, 3)))
print(calculate_error(-1, 1, (3, 3)))

# Task 5
# Write your calculate_all_error() function here
def calculate_all_error(m, b, points):
  error_total = 0
  for point in points:
    error_total += calculate_error(m, b, point)
  return error_total

datapoints = [(1, 1), (3, 3), (5, 5), (-1, -1)]

print(calculate_all_error(1, 0, datapoints))
print(calculate_all_error(1, 1, datapoints))
print(calculate_all_error(1, -1, datapoints))
print(calculate_all_error(-1, 1, datapoints))

possible_ms = [m/10 for m in range(-100, 101) ]
possible_bs = [b/10 for b in range(-200, 201)]

datapoints = [(1, 2), (2, 0), (3, 4), (4, 4), (5, 3)]
smallest_error = float("inf")
best_m = 0
best_b = 0

for m in possible_ms:
  for b in possible_bs:
    error = calculate_all_error(m, b, datapoints)
    if error < smallest_error:
      best_m = m
      best_b = b
      smallest_error = error
print(best_m, best_b, smallest_error)

print(get_y(0.4, 1.6, 6))


